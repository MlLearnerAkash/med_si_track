# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024] # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768] # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512] # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512] # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9

# YOLOv8.0n head
# head:
#   # YOLOv8.0n head (modified for P2/4)
head:
  # Upsample and process P5/32 -> P4/16
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # Upsample to match P4
  - [[-1, 6], 1, Concat, [1]]  # Concat with backbone P4
  - [-1, 3, C2f, [512]]  #12 Process P4

  # Upsample and process P4/16 -> P3/8
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # Upsample to match P3
  - [[-1, 4], 1, Concat, [1]]  # Concat with backbone P3
  - [-1, 3, C2f, [256]]  #15 Process P3

  # New Upsample for P3/8 -> P2/4 (xsmall)
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # Upsample to match P2
  - [[-1, 2], 1, Concat, [1]]  # Concat with backbone P2
  - [-1, 3, C2f, [128]]  #18 Process P2 (adjust channel size if needed)

  #Downsample P2/4 to P3/8
  - [-1, 1, Conv, [128, 3, 2]]  # Downsample back to P4 size
  - [[-1, 3], 1, Concat, [1]]  # Concat with head P4
  - [-1, 3, C2f, [256]]  #21 Process P4

  #Downsample P3/8 to P4/16
  - [-1, 1, Conv, [256, 3, 2]]  # Downsample back to P4 size
  - [[-1, 6], 1, Concat, [1]]  # Concat with head P4
  - [-1, 3, C2f, [512]]  #24 Process P4

  # # Downsample P4/16 to P5/32
  - [-1, 1, Conv, [512, 3, 2]]  # Downsample back to P5 size
  - [[-1, 9], 1, Concat, [1]]  # Concat with head P5
  - [-1, 3, C2f, [1024]]  #27 Process P5

  # Detection Layers (P2/4-xsmall, P3/8-small, P4/16-medium, P5/32-large)
  - [[15, 18, 21], 1, Detect, [nc]]  # Detect(P2, P3, P4, P5)


